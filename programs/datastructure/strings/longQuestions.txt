Ques 1. Given two strings .Print all the interleavings of the two strings.Interleaving means that the if B comes after A .It should also come after A 
in the interleaved string. 
ex- 
AB and CD 
ABCD 
ACBD 
ACDB 
CABD 
CADB 
CDAB

Ques 2. Given a string, find the substring with minimum length from it which contains exactly equal no of characters given in a hashmap which contains key 
as character and values as count of character needed in substring. 
For example: 
String str ="abcrefbda"; 
map = {{"b"=1},{"d"=1"},{"a"=1}}; 
Output = "bda";

Ques 3. Given a list of words and a dictionary with many words. The dictionary may or may not include the the given list of words. 
From the given list of words,you need to print only those words which are present in dictionary. 
Mention time complexity.

Ans. Create a dictionary with trie. To insert single word it takes O(n). Hence to insert x no of words it takes O(xn). But if we assume that the dictionary
is already there. Searching in trie takes O(n). So if we iterate through the list and for each string if we search in trie then it takes o(mn) where m can be
the size of list and n can be the length of an individual string.

Ques 4. You have n strings with their lengths. You are given an add(string s1,string s2) which would concatenate the string s2 with s1 and return s3. 
Optimize the cost of concatenation of all these strings into one big string. 
Ex: 1,3,2 are the lengths of given strings. 
1+3=4 
4+2=6 
total cost=10 
Optimize this total cost?

Ans. On going through the question and some suggestions, I understand that the string returned by the function has to be in alphabetical order.
i.e. if s1 = abd and s2 = cef, then s3 = abcdef and not abdcef. Because of ordering is to be maintained then we do not need to cut the cost as it will be fixed.
Hence, I assume that we are given set of strings and then the result should be the concatination of all strings in alphabetical order. We get this by using
Minimum Heap.

Ques 5. Find the substring of length 3 which is present in the reverse order from the string. 
Ex: if the string is abcdcba (cba is the reverse of abc) so we should return cba. 
And was asked to improve upon the complexity.

Ans. Iterate the string. Take three words at a time(i.e creating a window of size three). Reverse them. And do a KMP search on the main string.
So to iterate through string, it takes O(n). Reverse will take O(3) which is constant. And KMP search will take O(n). So total time complexity = O(n2)
And space complexity = O(3) for prefix function of KMP. Using suffix tree mite reduce the complexity.

Ques 6. check if two strings are anagrams or not
Sort the two strings and compare them. If anyone of the character do not match then they are not anagrams boss!